{% extends 'layout.twig' %}

{% block body %}
  <h1>Accueil</h1>
  
  <div class="row">
    <div class="col-8">
      <div class="card text-white bg-transparent">
        <div class="card-body">
          <h4 class="card-title">Measure</h4>
          <p>Last measurment: </p>
          <h3 id="realtime-measurement"></h3>
        </div>
      </div>
    </div>

    <div class="col-4">
      <div class="card text-white bg-transparent">
        <div class="card-body">
          <h4 class="card-title">Control</h4>
            <button type="button" name="start" id="start" class="btn btn-primary w-75" btn-lg btn-block>START</button>
            <button type="button" name="stop" id="stop" class="btn btn-primary w-75 mt-3" btn-lg btn-block>STOP </button>
          <p class="mt-4">Status: {{status}}</p>
        </div>
      </div>
    </div>
  </div>
{% endblock %}

{% block scripts %}
<script>
  document.getElementById('start').addEventListener('click', function() {
    fetch('/start', { method: 'POST' });
  });
  
  document.getElementById('stop').addEventListener('click', function() {
    fetch('/stop', { method: 'POST' });
  });

  function fetchRealtimeMeasurements() {
    console.log('Fetching realtime measurements...');
    $.ajax({
      url: '/realtime-measurements',
      method: 'GET',
      success: function(data) {
        console.log('Received data:', data);
        document.getElementById(realtime-measurement).innerHTML=measure.value;
      },
      error: function(xhr, status, error) {
        console.error('Error fetching realtime measurements:', error);
      }
    });
  } // Add this line

  // Mettre Ã  jour les mesures toutes les X millisecondes (par exemple toutes les 1000 ms)
  setInterval(fetchRealtimeMeasurements, 1000);

</script>
{% endblock %}
